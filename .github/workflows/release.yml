name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Clear Git cache
        run: |
          rm -rf ${{ github.workspace }}/.git
          
      - name: Check out the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  
          persist-credentials: true

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

      - name: Set permissions for deploy.sh
        run: chmod +x ./scripts/deploy.sh

      - name: Mostrar contexto completo
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            console.log(JSON.stringify(context, null, 2));

      - name: Run Semantic Release
        uses: titan85/semanticPlugin@main
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_url: ${{ github.repository }}

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'

      - name: Reorder changelog
        run: python3 scripts/reorder-changelog.py

      - name: Commit and push reordered changelog
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add CHANGELOG.md
          git commit -m "chore: reorder CHANGELOG.md"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract latest changelog version
        id: changelog
        run: |
          # Obtener la última versión del changelog
          latest_version=$(grep -m 1 -E "^## \[\d+\.\d+\.\d+\]" CHANGELOG.md)
          
          # Extraer la fecha y el número de versión
          version_tag=$(echo "$latest_version" | grep -oP "\d+\.\d+\.\d+")
          version_date=$(echo "$latest_version" | grep -oP "\(\d{4}-\d{2}-\d{2}\)")
          
          # Construir la entrada de la última versión
          repo_url="https://github.com/${GITHUB_REPOSITORY}"
          tag_url="$repo_url/tree/v$version_tag"
          
          # Crear la sección de Current Version y almacenarla en CURRENT_VERSION_SECTION
          echo -e "CURRENT_VERSION_SECTION=\"# Current version\n## [$version_tag]($tag_url) $version_date\n\"" >> $GITHUB_ENV
  

      - name: Update README.md with latest version
        run: |
          # Colocar la nueva sección al inicio del README.md
          { echo "${{ env.CURRENT_VERSION_SECTION }}"; cat README.md; } > README.tmp && mv README.tmp README.md

      - name: Commit README.md Update
        run: |
          git config --local user.name "GitHub Actions"
          git config --local user.email "actions@github.com"
          git add README.md
          git commit -m "docs: update README with latest version"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}